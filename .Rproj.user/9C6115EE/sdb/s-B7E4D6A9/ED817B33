{
    "collab_server" : "",
    "contents" : "---\ntitle: \"cHoltLaury\"\nauthor: \"Nathaniel Phillips\"\ndate: \"20 March 2017\"\noutput:\n  html_document: default\n  pdf_document: default\nbibliography: bibliography.bib\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE, fig.align='center')\nsetwd(rprojroot::is_rstudio_project$find_file())\nsource(\"r/01_setup.R\")\n```\n\n# Questions\n\n- How could competitive affect choices in the Holt and Laury (2002) gambles?\n\n\n# Conclusions\n\n- For each gamble pair, the option with the highest EV is *always* the option with the highest probability of winning. This is independent of the variance of options.\n- In other words, whether you're competing with someone or not, it is always better to choose the high EV option. In gambles 1-4 this will be the safe option. In gambles 5-10, this will be the risky option.\n- Whether you are risk averse or not, the larger the competitive bonus is, the more likely you should 'act' risk neutral.\n- The effects of bonuses are, surprisingly, larger for risk-averse participants than risk-seeking participants.\n- If both players are risk neutral, than there is an equilibrium for each gamble pair favoring the high-EV option (the safe option for pairs 1-5, and the risky option for pairs 6-10).\n\n## Holt and Laury Gambles\n\nHere are the 10 gambles from Holt & Laury (2002)\n\n```{r, echo = FALSE}\nhl.df <- data.frame(\"index\" = 1:10)\nhl.df <- hl.df %>% mutate(\n  a.x = rep(2, 10),\n  a.px = seq(.1, 1, by = .1),\n  a.y = rep(1.6, 10),\n  a.py = seq(.9, 0, by = -.1),\n  b.x = rep(3.85, 10),\n  b.px = seq(.1, 1, by = .1),\n  b.y = rep(.1, 10),\n  b.py = seq(.9, 0, by = -.1),\n  a.ev = a.x * a.px + a.y * a.py,\n  b.ev = b.x * b.px + b.y * b.py,\n  a.var = a.px * (a.x - a.ev) ^ 2 + a.py * (a.y - a.ev) ^ 2,\n  b.var = b.px * (b.x - b.ev) ^ 2 + b.py * (b.y - b.ev) ^ 2,\n  ev.diff = a.ev - b.ev,\n  high.ev.option = ifelse(ev.diff > 0, \"a\", \"b\")\n)\nknitr::kable(hl.df, digits = 2)\n```\n\nHere are the gambles represented in a coordinate space:\n\n```{r, echo = FALSE, fig.width = 6, fig.height = 6}\nplot(1, xlim = c(0, 4), ylim = c(0, 4), type = \"n\", xlab = \"Variance\", ylab = \"EV\", main = \"Holt & Laury Gambles\")\ngrid()\nfor(i in 1:10) {\n  \n  points(hl.df$a.var[i], hl.df$a.ev[i], col = \"blue\", pch = 16)\n  points(hl.df$b.var[i], hl.df$b.ev[i], col = \"red\", pch = 16)\n\n  segments(hl.df$a.var[i], hl.df$a.ev[i], hl.df$b.var[i],hl.df$b.ev[i], col = gray(.5))\n\n  text(hl.df$b.var[i], hl.df$b.ev[i], labels = i, pos = 3)  \n}\n```\n\n\n### Introducing competition\n\nFor each gamble pair, I calculated the probability that gamble A would beat gamble B given a one shot game. For example, for pair 4, the probability that gamble A (the safe gamble) wins is $.40 \\times 0.6 + 0.60 \\times 0.60 = 0.60$. Here are the results\n\n```{r}\nhlcomp.fun <- function(hl.gn = NULL, a.df = NULL, b.df = NULL) {\n\n\nhl.df <- structure(list(index = 1:10, a.x = c(2, 2, 2, 2, 2, 2, 2, 2, \n2, 2), a.px = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, \n1), a.y = c(1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6), \n  a.py = c(0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0), \n  b.x = c(3.85, 3.85, 3.85, 3.85, 3.85, 3.85, 3.85, 3.85, 3.85, \n  3.85), b.px = c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, \n  1), b.y = c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, \n  0.1), b.py = c(0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, \n  0), a.ev = c(1.64, 1.68, 1.72, 1.76, 1.8, 1.84, 1.88, 1.92, \n  1.96, 2), b.ev = c(0.475, 0.85, 1.225, 1.6, 1.975, 2.35, \n  2.725, 3.1, 3.475, 3.85), a.var = c(0.0144, 0.0256, 0.0336, \n  0.0384, 0.04, 0.0384, 0.0336, 0.0256, 0.0144, 0), b.var = c(1.265625, \n  2.25, 2.953125, 3.375, 3.515625, 3.375, 2.953125, 2.25, 1.265625, \n  0)), class = \"data.frame\", .Names = c(\"index\", \"a.x\", \"a.px\", \n\"a.y\", \"a.py\", \"b.x\", \"b.px\", \"b.y\", \"b.py\", \"a.ev\", \"b.ev\", \n\"a.var\", \"b.var\"), row.names = c(NA, -10L))\n\nif(is.finite(hl.gn)) {\n  \n  a.df <- data.frame(outcome = c(hl.df$a.x[hl.gn], hl.df$a.y[hl.gn]), \n                  prob = c(hl.df$a.px[hl.gn], hl.df$a.py[hl.gn]))\n  \n  b.df <-  data.frame(outcome = c(hl.df$b.x[hl.gn], hl.df$b.y[hl.gn]), \n                  prob = c(hl.df$b.px[hl.gn], hl.df$b.py[hl.gn]))\n  \n}\n\np.x.wins.v <- sapply(1:nrow(a.df), FUN = function(i) {\n  \n  if(sum(b.df$prob[b.df$outcome < a.df$outcome[i]]) > 0) {\n  result <- a.df$prob[i] * sum(b.df$prob[b.df$outcome < a.df$outcome[i]])\n  } else {result <- 0}\n  \n  return(result)\n    \n  \n})\n\np.x.wins <- sum(p.x.wins.v)\n\nreturn(p.x.wins)\n\n}\n```\n\n```{r}\nhl.df$p.a.wins <- sapply(1:10, hlcomp.fun)\nknitr::kable(hl.df[,c(\"index\", \"ev.diff\", \"high.ev.option\", \"p.a.wins\")], digits = 2)\n```\n\n- Interestingly, it looks like the high EV gamble is always the gamble with the higher probability of winning. For pairs 1 through 4, the safe gamble is both the high EV gamble and the gamble with the highest probability of winning. For pairs 5 through 10, the risky gamble is both the high EV gamble and the gamble with the highest probability of winning.\n\n\n### Introducing risk aversion and risk seeking\n\nTo introduce risk aversion and risk seeking, we transform the outcomes by $\\frac{x^{1-r}}{1-r}$ according to [@holt2002risk]. r < - indicates risk seeking, r = 0 indicates risk neutrality, and r > 0 indicates risk aversion.\n\n```{r, echo = FALSE, fig.align='center', fig.width = 6, fig.height = 6, fig.cap= \"Utility functions\"}\noutcomes <- seq(0, 3, .1)\n\n\nplot(1, xlim = c(0, 4), ylim = c(0, 5), type = \"n\", main = \"Utility functions from Holt and Laury\", xlab = \"outcome\", ylab = \"Utility\")\ngrid()\nr.vals <- c(0, -.7, .7)\n\nfor(x in r.vals) {\n\n  lines(outcomes, outcomes ^ (1-x) / (1 - x), \n        col = yarrr::piratepal(\"basel\", trans = .2)[which(x == r.vals)], lwd= 2)\n  \n}\n\nlegend(\"topleft\", legend = paste0(\"r = \", r.vals), col = yarrr::piratepal(\"basel\", trans = .2)[1:length(r.vals)], lwd =2)\n\n\n```\n\n\n\n\nAbout 70\\% of the subjects from [@holt2002risk] were risk averse. Here are results for someone with high risk aversion of r = .7. This person switches to the risky gamble at option 8:\n\n```{r, echo = FALSE}\nr <- .7\n\nra.hl.df <- hl.df %>% mutate(\n  a.eu = (a.x ^ (1 - r)) / (1 - r) * a.px + (a.y ^ (1 - r)) / (1 - r) * a.py,\n  b.eu = (b.x ^ (1 - r)) / (1 - r) * b.px + (b.y ^ (1 - r)) / (1 - r) * b.py,\n  eu.diff = a.eu - b.eu,\n  high.eu.option = ifelse(a.eu > b.eu, \"a\", \"b\")\n) %>% select(index,  a.eu, b.eu, eu.diff, high.eu.option)\n\nknitr::kable(ra.hl.df, digits = 2, caption = \"Option expected utilities and decisions for risk averse subjects with r = .7\")\n```\n\n\n```{r, echo = FALSE}\n# Given a value of r and competitive bonus, when will the agent switch to the risky option?\nget.switch.point <- function(r = 0, \n                             bonus = 0) {\n  \n  if(bonus == 0) {\n  \ny <- hl.df %>% \n  \n  mutate(\n  a.eu = (a.x ^ (1 - r)) / (1 - r) * a.px + (a.y ^ (1 - r)) / (1 - r) * a.py ,\n  b.eu = (b.x ^ (1 - r)) / (1 - r) * b.px + (b.y ^ (1 - r)) / (1 - r) * b.py ,\n  a.eu.pb = a.eu,\n  b.eu.pb = b.eu,\n  eu.diff = a.eu - b.eu,\n  eu.pb.diff = a.eu.pb - b.eu.pb,\n  high.eu.option = ifelse(a.eu > b.eu, \"a\", \"b\"),\n  high.eu.pb.option = ifelse(a.eu.pb > b.eu.pb, \"a\", \"b\"))\n  } else {\n    \ny <- hl.df %>% \n  \n  mutate(\n  a.eu = (a.x ^ (1 - r)) / (1 - r) * a.px + (a.y ^ (1 - r)) / (1 - r) * a.py,\n  b.eu = (b.x ^ (1 - r)) / (1 - r) * b.px + (b.y ^ (1 - r)) / (1 - r) * b.py,\n  a.eu.pb = (a.x ^ (1 - r)) / (1 - r) * a.px + (a.y ^ (1 - r)) / (1 - r) * a.py + (bonus ^ (1 - r)) / (1 - r) * p.a.wins,\n  b.eu.pb = (b.x ^ (1 - r)) / (1 - r) * b.px + (b.y ^ (1 - r)) / (1 - r) * b.py + (bonus ^ (1 - r)) / (1 - r) * (1 - p.a.wins),\n  eu.diff = a.eu - b.eu,\n  eu.pb.diff = a.eu.pb - b.eu.pb,\n  high.eu.option = ifelse(a.eu > b.eu, \"a\", \"b\"),\n  high.eu.pb.option = ifelse(a.eu.pb > b.eu.pb, \"a\", \"b\"))\n}\n \n\np.risky <- mean(y$high.eu.pb.option == \"b\")\n\n output <- list(\"df\" = y, \"p.risky\" = p.risky)\n  \n return(output)\n \n}\n```\n\n\n\n### Adding bonuses\n\nNow we can add different bonus magnitudes and see how it affects choices:\n\n### Risk averse: r = .7, bonus = 0\n\nRisk averse participant with no bonus\n\n```{r, echo = FALSE}\nx <- get.switch.point(r = .7, bonus = 0)\n\nknitr::kable(x$df[c(\"index\", \"a.eu\", \"b.eu\", \"a.eu.pb\", \"b.eu.pb\", \"eu.pb.diff\", \"high.eu.option\", \"high.eu.pb.option\")], digits = 2, caption = \"EU calculations with r = 0.7 and reward bonus of 0\")\n```\n\n\n### Risk averse: r = .7, bonus = 1\n\nRisk averse participant with a moderate reward bonus of 1.\n\n```{r, echo = FALSE}\nx <- get.switch.point(r = .7, bonus = 1)\n\nknitr::kable(x$df[c(\"index\", \"a.eu\", \"b.eu\", \"a.eu.pb\", \"b.eu.pb\", \"eu.pb.diff\", \"high.eu.option\", \"high.eu.pb.option\")], digits = 2, caption = \"EU calculations with r = 0.7 and reward bonus of 1\")\n```\n\n\n### Risk seeking: r = -.7, bonus = 0\n\nRisk seeking participant with no bonus\n\n\n```{r, echo = FALSE}\nx <- get.switch.point(r = -.7, bonus = 0)\n\nknitr::kable(x$df[c(\"index\", \"a.eu\", \"b.eu\", \"a.eu.pb\", \"b.eu.pb\", \"eu.pb.diff\", \"high.eu.option\", \"high.eu.pb.option\")], digits = 2, caption = \"EU calculations with r = -0.7 and reward bonus of 0\")\n```\n\n\n### Risk seeking: r = -.7, bonus = 1\n\nRisk seeking participant with a moderate reward bonus of 1\n\n```{r, echo = FALSE}\nx <- get.switch.point(r = -.7, bonus = 1)\n\nknitr::kable(x$df[c(\"index\", \"a.eu\", \"b.eu\", \"a.eu.pb\", \"b.eu.pb\", \"eu.pb.diff\", \"high.eu.option\", \"high.eu.pb.option\")], digits = 2, caption = \"EU calculations with r = -0.7 and reward bonus of 1\")\n```\n\n\n### Risk seeking: r = -.7, bonus = 5\n\nRisk seeking participant with a large reward bonus of 5.\n\n```{r, echo = FALSE}\nx <- get.switch.point(r = -.7, bonus = 5)\n\nknitr::kable(x$df[c(\"index\", \"a.eu\", \"b.eu\", \"a.eu.pb\", \"b.eu.pb\", \"eu.pb.diff\", \"high.eu.option\", \"high.eu.pb.option\")], digits = 2, caption = \"EU calculations with r = -0.7 and reward bonus of 5\")\n```\n\n\n\n```{r, echo = FALSE, fig.align='center', fig.width = 6, fig.height = 6, fig.cap=\"Proportion of risky choices given magnitude of a competitive bonus\"}\nbonuses <- seq(0, 10, .2)\n\nrs <- sapply(bonuses, FUN = function(x) {\n  \n  y <- get.switch.point(r = -.7, bonus = x)\n  \n  return(mean(y$df$high.eu.pb.option == \"b\"))\n  \n  \n})\nra <- sapply(bonuses, FUN = function(x) {\n  \n  y <- get.switch.point(r = .7, bonus = x)\n  \n  return(mean(y$df$high.eu.pb.option == \"b\"))\n  \n  \n})\n\n\nplot(1, xlim = c(0, 10), ylim = c(0, 1), type = \"n\", xlab = \"Bonus Amount\", ylab = \"Proportion of risky Choices\")\ngrid()\n\nabline(h = .5, lty = 2)\nlines(bonuses, rs, col = \"red\", lwd = 2)\nlines(bonuses, ra, col = \"green\", lwd = 2)\n\nlegend(\"topright\", c(\"r = .7, risk averse\", \"r = -.7, risk seeking\"), col = c(\"green\", \"red\"), lty = 1)\n\n```\n\n\n\n\n```{r, eval = FALSE, echo = FALSE}\n\n\n# Calculate switch points for several values of r and bonus\nswitch.point.df <- expand.grid(r = c(0, .5, .95),\n                               bonus = c(0, .5, 1, 2),\n                               switch.point = NA)\n\nswitch.point.df$switch.point <- sapply(1:nrow(switch.point.df), FUN = function(x) {\n  \n  get.switch.point(r = switch.point.df$r[x],\n                   bonus = switch.point.df$bonus[x])$switch.point\n  \n})\n\n\n# Plot results\n\nplot(1, xlim = c(0, 5), ylim = c(4, 10), type = \"n\", xlab = \"Competitive Bonus\", \n     ylab = \"Switch to Risky Gamble\")\n\nfor(r.i in unique(switch.point.df$r)) {\n  \n  with(subset(switch.point.df, r == r.i), \n       lines(bonus, switch.point, type = \"b\", \n             col = yarrr::piratepal(\"basel\")[which(r.i == unique(switch.point.df$r))],\n             lwd = 2))\n  \n}\n\nlegend(\"topright\", legend = paste0(\"r = \", unique(switch.point.df$r)), \n       col = yarrr::piratepal(\"basel\"), lty = 1, lwd = 2)\n\n\n\n```\n\n\n\n## HL Game theoretic\n\n\n```{r, echo = FALSE}\ngt.fun <- function(a.df, \n                   b.df, hl = NULL) {\n\nif(is.null(hl) == FALSE) {\n  \na.df <- data.frame(outcomes = c(hl.df$a.x[hl], hl.df$a.y[hl]),\n                   probs = c(hl.df$a.px[hl], hl.df$a.py[hl]))\n\n  b.df <- data.frame(outcomes = c(hl.df$b.x[hl], hl.df$b.y[hl]),\n                   probs = c(hl.df$b.px[hl], hl.df$b.py[hl]))\n}\n  \n# a.df <- data.frame(outcomes = c(1, 3), probs = c(.3, .7))\n# b.df <- data.frame(outcomes = c(0, 5), probs = c(.8, .2))\n\n\ngambles.n <- 2\n\noutcome.mtx <- expand.grid(\"PX\" = LETTERS[1:gambles.n],\n                           \"PY\" = LETTERS[1:gambles.n], stringsAsFactors = FALSE)\n\n\nfor(i in 1:nrow(outcome.mtx)) {\n  \n  PX.option <- outcome.mtx$PX[i]\n  PY.option <- outcome.mtx$PY[i]\n\n  if(PX.option == PY.option) {p.X.wins <- .5} else {\n    \n    if(PX.option == \"A\") {x.df <- a.df}\n    if(PX.option == \"B\") {x.df <- b.df}\n\n    if(PY.option == \"A\") {y.df <- a.df}\n    if(PY.option == \"B\") {y.df <- b.df}\n    \n  p.X.wins <- sum(sapply(1:nrow(a.df), FUN = function(x) {\n    \n    \n    X.wins.outright <- x.df$probs[x] * sum(y.df$probs[y.df$outcomes < x.df$outcomes[x]])\n    Ties <- x.df$probs[x] * sum(y.df$probs[y.df$outcomes == x.df$outcomes[x]])\n\n    result <- X.wins.outright + .5 * Ties\n    \n    return(result)\n    \n  }))\n  \n  }\n  \n  outcome.mtx$p.x.wins[i] <- p.X.wins\n    \n}\n  \n\n# Reshape outcome.mtx\n\noutcome.mtx <- cbind(outcome.mtx$p.x.wins[1:gambles.n], outcome.mtx$p.x.wins[(gambles.n + 1):nrow(outcome.mtx)])\n\ncolnames(outcome.mtx) <- c(\"Y.A\", \"Y.B\")\nrownames(outcome.mtx) <- c(\"X.A\", \"X.B\")\n\nreturn(outcome.mtx)\n\n}\n\n```\n\n\n\n- For each gamble pair, calculate a 2 x 2 table calculating the probability of winning. Look for game theoretic equilibriums\n\nFor example, here is a 2 x 2 competition table for gamble pair 3:\n\n```{r, echo = FALSE}\nknitr::kable(gt.fun(hl = 3))\n```\n\n- For gamble pair 3, there is an equilibrium where both players choose option A (the safe option, high EV option).\n\nHere is the the table for gamble pair 7:\n\n```{r, echo = FALSE}\nknitr::kable(gt.fun(hl = 7))\n```\n\n- For game pair 7, there is an equilibrum where both players choose option B (the risky, high EV option)\n\n### Conclusion\n\n- Assuming both players are risk neutral, there is an equilibrium for each gamble pair where both players should choose the high EV option\n\n## References\n",
    "created" : 1491246917407.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "180|18|193|2|\n316|34|351|0|\n337|39|344|0|\n358|20|424|0|\n",
    "hash" : "672873469",
    "id" : "ED817B33",
    "lastKnownWriteTime" : 1492690097,
    "last_content_update" : 1492690097993,
    "path" : "~/Dropbox/manuscripts/CompetitiveBART/rmds/cHoltLaurey.Rmd",
    "project_path" : "rmds/cHoltLaurey.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}